from client import Clientimport socketimport sysclass EchoServer(object):    def __init__(self, port=4242):        if port < 1024 or port > 65535:            print('Wrong port number')            sys.exit(1)        self.host = 'localhost'        self.is_run = False        self.port = port        self.server = None        self.threads = []    def is_running(self):        return self.is_run    def get_port(self):        return self.port    def start(self):        try:            self.is_run = True            self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)            self.server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)            self.server.bind((self.host, self.port))            self.server.listen(5)        except socket.error, (value, message):            if self.server:                self.server.close()            print('Could not open socket: {}'.format(message))            sys.exit(1)    def run(self):        self.start()        data = [self.server, sys.stdin]        print('Started port: {}'.format(self.port))        print('Waiting for connection...')        while True:            for sock in data:                if sock == self.server:                    client = Client(self.server.accept())                    print('{} connected'.format(client.get_address()))                    client.start()                    self.threads.append(client)    def stop(self):        self.is_run = False        self.server.close()if __name__ == "__main__":    server = EchoServer()    print(server.is_running())    print(server.get_port())    server.start()    print(server.is_running())    server.stop()    print(server.is_running())    server = EchoServer(54321)    print(server.get_port())    print(server.is_running())'''    try:        server.run()    except KeyboardInterrupt:        print('Server closed')    server.stop()'''